name: 'Build LaTeX document'
description: 'Build and publish LaTeX document'
inputs:

  sources:
    description: 'List of tex files to be built'
    required: 'true'

  working_directory:
    description: 'The working directory for building tex files'
    default: '.'

  latexmk_use_xelatex:
    description: Instruct latexmk to use XeLaTeX
    default: 'false'

  document_filename:
    description: 'The name of the built document file (usually ends with ".pdf")'

  github_token:
    description: A github token that has write access to the repo where the tag is.
    required: 'true'
    default: ${{ github.token }}

  target_branch:
    description: The branch where to push the PDF to.
    required: 'true'
    default: pdf

runs:

  using: "composite"
  steps:

    - name: Build LaTeX document parts
      uses: xu-cheng/latex-action@v3
      with:
        root_file: ${{ inputs.sources }}
        working_directory: ${{ inputs.working_directory }}
        latexmk_use_xelatex: ${{ inputs.latexmk_use_xelatex }}

    - name: Upload LaTeX document
      uses: actions/upload-artifact@v4
      id: document-upload-step
      with:
        name: document
        path: ${{ inputs.working_directory }}/${{ inputs.document_filename }}

    - name: Paste document download link into pull request
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Document for ${{ github.event.pull_request.head.sha }} built successfully: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.document-upload-step.outputs.artifact-id }}'
          })

    - name: Checkout target branch
      if: github.event_name == 'push'
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.target_branch }}
        path: target

    - name: Copy PDF
      if: github.event_name == 'push'
      shell: bash
      run: |
        mkdir -p "target/${{ github.ref_name }}"
        cp "${{ inputs.working_directory }}/${{ inputs.document_filename }}" "target/${{ github.ref_name }}/${{ inputs.document_filename }}"

    - name: Build target branch index
      if: github.event_name == 'push'
      run: |
        cd target
        python "${{ github.action_path }}/build_index.py"

    - name: Commit and push the target branch
      if: github.event_name == 'push'
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: Update ${{ github.ref_name }}/${{ inputs.document_filename }}
        repository: target
